name: Java CI with Maven

on:
  # push:
  #   branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.event.repository.name }}
  IMAGE_TAG: latest
  PORT: 8080

jobs:
  project-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # - name: Set up JDK 17
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: "17"
      #     distribution: "temurin"
      #     cache: maven

      # - name: Build with Maven
      #   run: mvn -B package --file pom.xml

      # - name: Log into registry
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ secrets.DOCKER_HUB_USER }}
      #     password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ secrets.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # - name: Connect to server
      #   uses: webfactory/ssh-agent@v0.4.1
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # - name: Setup knownhosts
      #   run: ssh-keyscan ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # - name: Trigger server deployment script
      #   run: |
      #     ssh root@${{ secrets.SERVER_HOST }} "docker stop ${{ env.IMAGE_NAME }} || true"
      #     ssh root@${{ secrets.SERVER_HOST }} "docker rm ${{ env.IMAGE_NAME }} || true"
      #     ssh root@${{ secrets.SERVER_HOST }} "docker pull ${{ secrets.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
      #     ssh root@${{ secrets.SERVER_HOST }} "docker run -p ${{ env.PORT }}:${{ env.PORT}} --name ${{ env.IMAGE_NAME }} -d ${{ secrets.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
